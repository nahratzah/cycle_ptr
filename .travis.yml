---
language: cpp
os: linux
dist: bionic

jobs:
  include:
    - env:
        - CXX=g++
        - SUDO="sudo"
    - env:
        - CXX=clang++
        - SUDO="sudo"
    - os: osx
      osx_image: xcode9.4
      env:
        - SUDO="sudo"
    - os: windows
      env:
        - CMAKE_OPTS="-DCMAKE_INSTALL_PREFIX=${HOME}/dependencies -DCMAKE_PREFIX_PATH=${HOME}/dependencies"
        - SUDO=""
        - CMAKE_BUILD_TYPE=Debug
      before_install:
        # The homebrew and linux packages suffers from the same shortcoming: missing cmake files.
        # While windows chocolatey doesn't have the package at all.
        # So we use manual install.
        - mkdir -p "${HOME}/dependencies"
        - mkdir /tmp/unit_test_plus_plus
        - pushd /tmp/unit_test_plus_plus
        - wget -O /tmp/unittest-cpp-v2.0.0.tar.gz https://github.com/unittest-cpp/unittest-cpp/archive/v2.0.0.tar.gz
        - tar zxf /tmp/unittest-cpp-v2.0.0.tar.gz
        - mkdir build
        - cd build
        - env -u CXX cmake ${CMAKE_OPTS} ../unittest-cpp-2.0.0
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
        - ${SUDO} cmake --install . -v --prefix "${HOME}/dependencies" --config ${CMAKE_BUILD_TYPE}
        - popd

before_install:
  # The homebrew and linux packages suffers from the same shortcoming: missing cmake files.
  # While windows chocolatey doesn't have the package at all.
  # So we use manual install.
  - mkdir /tmp/unit_test_plus_plus
  - pushd /tmp/unit_test_plus_plus
  - wget -O /tmp/unittest-cpp-v2.0.0.tar.gz https://github.com/unittest-cpp/unittest-cpp/archive/v2.0.0.tar.gz
  - tar zxf /tmp/unittest-cpp-v2.0.0.tar.gz
  - mkdir build
  - cd build
  - env -u CXX cmake ../unittest-cpp-2.0.0
  - make
  - ${SUDO} make install
  - popd

before_script:
  # create a build folder for the out-of-source build
  - mkdir build
  # switch to build directory
  - cd build

script:
  - cmake ${CMAKE_OPTS} ..
  - cmake --build . --config ${CMAKE_BUILD_TYPE}
  - ctest -C ${CMAKE_BUILD_TYPE} --output-on-failure
